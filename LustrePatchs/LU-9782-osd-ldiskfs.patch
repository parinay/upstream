From 1eb0573fdeb7ef8ed667974fd30d4d110b8166c9 Mon Sep 17 00:00:00 2001
From: Alexey Lyashkov <alexey.lyashkov@seagate.com>
Date: Thu, 20 Jul 2017 14:36:18 +0530
Subject: [PATCH] LU-9782 osd-ldiskfs: avoid extra search

Extent tree grow greatly durin random IO test with small block size.
osd_is_mapped responsible to large cpu consumption in this case.

|          |
|          |--94.49%-- ldiskfs_es_find_delayed_extent_range
|          |          ldiskfs_fiemap
|          |          osd_is_mapped
|          |          osd_declare_write_commit
|          |
|          |--5.49%-- ldiskfs_fiemap
|          |          osd_is_mapped
|          |          osd_declare_write_commit
|
|--21.80%-- ldiskfs_es_find_delayed_extent_range
|          |
|          |--100.00%-- ldiskfs_fiemap
|          |          osd_is_mapped

let's cache a osd_is_mapped result to avoid extra search in extent
tree,

Seagate-bug-id: MRP-4474
Signed-off-by: Alexey Lyashkov <alexey.lyashkov@seagate.com>
Change-Id: I63d480bfc7c6b7599b80ceeec9447b227a1610c8
Reviewed-on: https://review.whamcloud.com/28145
Reviewed-by: Fan Yong <fan.yong@intel.com>
Tested-by: Jenkins
Tested-by: Maloo <hpdd-maloo@intel.com>
Reviewed-by: Andrew Perepechko <andrew.perepechko@seagate.com>
Reviewed-by: Oleg Drokin <oleg.drokin@intel.com>
---
 lustre/include/uapi/linux/lustre/lustre_idl.h | 7 +++++++
 lustre/ofd/ofd_io.c                           | 1 +
 lustre/osd-ldiskfs/osd_internal.h             | 2 ++
 lustre/osd-ldiskfs/osd_io.c                   | 7 ++++---
 4 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/lustre/include/uapi/linux/lustre/lustre_idl.h b/lustre/include/uapi/linux/lustre/lustre_idl.h
index f333376aa0..58816a7db0 100644
--- a/lustre/include/uapi/linux/lustre/lustre_idl.h
+++ b/lustre/include/uapi/linux/lustre/lustre_idl.h
@@ -1274,6 +1274,13 @@ struct hsm_state_set {
 			       OBD_BRW_OVER_GRPQUOTA | \
 			       OBD_BRW_OVER_PRJQUOTA)
 
+#define OBD_BRW_LOCAL1	0x80000000UL	/*
+					 * osd-ldiskfs internal,
+					 * page mapped to real block
+					 */
+
+#define OBD_BRW_LOCALS (OBD_BRW_LOCAL1)
+
 #define OBD_OBJECT_EOF LUSTRE_EOF
 
 #define OST_MIN_PRECREATE 32
diff --git a/lustre/ofd/ofd_io.c b/lustre/ofd/ofd_io.c
index 53136558a5..924bffab6e 100644
--- a/lustre/ofd/ofd_io.c
+++ b/lustre/ofd/ofd_io.c
@@ -645,6 +645,7 @@ static int ofd_preprw_write(const struct lu_env *env, struct obd_export *exp,
 		/* correct index for local buffers to continue with */
 		for (k = 0; k < rc; k++) {
 			lnb[j+k].lnb_flags = rnb[i].rnb_flags;
+			lnb[j+k].lnb_flags &= ~OBD_BRW_LOCALS;
 			if (!(rnb[i].rnb_flags & OBD_BRW_GRANTED))
 				lnb[j+k].lnb_rc = -ENOSPC;
 		}
diff --git a/lustre/osd-ldiskfs/osd_internal.h b/lustre/osd-ldiskfs/osd_internal.h
index 1f4604f207..6eb09090f1 100644
--- a/lustre/osd-ldiskfs/osd_internal.h
+++ b/lustre/osd-ldiskfs/osd_internal.h
@@ -95,6 +95,8 @@ extern struct kmem_cache *dynlock_cachep;
 #undef HAVE_PROJECT_QUOTA
 #endif
 
+#define OBD_BRW_MAPPED	OBD_BRW_LOCAL1
+
 struct osd_directory {
         struct iam_container od_container;
         struct iam_descr     od_descr;
diff --git a/lustre/osd-ldiskfs/osd_io.c b/lustre/osd-ldiskfs/osd_io.c
index b8182f02ea..dab5175f17 100644
--- a/lustre/osd-ldiskfs/osd_io.c
+++ b/lustre/osd-ldiskfs/osd_io.c
@@ -1165,7 +1165,9 @@ static int osd_declare_write_commit(const struct lu_env *env,
 		    lnb[i - 1].lnb_file_offset + lnb[i - 1].lnb_len)
 			extents++;
 
-		if (!osd_is_mapped(dt, lnb[i].lnb_file_offset, &extent))
+		if (osd_is_mapped(dt, lnb[i].lnb_file_offset, &extent))
+			lnb[i].lnb_flags |= OBD_BRW_MAPPED;
+		else
 			quota_space += PAGE_SIZE;
 
 		/* ignore quota for the whole request if any page is from
@@ -1258,7 +1260,6 @@ static int osd_write_commit(const struct lu_env *env, struct dt_object *dt,
         struct osd_device  *osd = osd_obj2dev(osd_dt_obj(dt));
         loff_t isize;
         int rc = 0, i;
-	struct osd_fextent extent = { 0 };
 
         LASSERT(inode);
 
@@ -1271,7 +1272,7 @@ static int osd_write_commit(const struct lu_env *env, struct dt_object *dt,
 
         for (i = 0; i < npages; i++) {
 		if (lnb[i].lnb_rc == -ENOSPC &&
-		    osd_is_mapped(dt, lnb[i].lnb_file_offset, &extent)) {
+		    (lnb[i].lnb_flags & OBD_BRW_MAPPED)) {
 			/* Allow the write to proceed if overwriting an
 			 * existing block */
 			lnb[i].lnb_rc = 0;
-- 
2.17.1

